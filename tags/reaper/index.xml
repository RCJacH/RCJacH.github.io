<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>REAPER on RCJacH</title><link>https://RCJacH.github.io/tags/reaper/</link><description>Recent content in REAPER on RCJacH</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 11 May 2021 10:58:38 +0800</lastBuildDate><atom:link href="https://RCJacH.github.io/tags/reaper/index.xml" rel="self" type="application/rss+xml"/><item><title>Working with Sample Sample Library Templates in REAPER</title><link>https://RCJacH.github.io/blog/working-with-sample-library-templates/</link><pubDate>Tue, 11 May 2021 10:58:38 +0800</pubDate><guid>https://RCJacH.github.io/blog/working-with-sample-library-templates/</guid><description>This blog post functions as a prelude to my tutorial on setting up a Sample Library Server with REAPER. I&amp;rsquo;m going to explain why you would want to set one up by comparing several different approaches to templating with large sample libraries.
To understand the benefits of having a dedicated server for sample libraries, we need to look at some of the problems composers are facing when producing music.
Problems when Working with Sample Libraries Problems with Sample Libraries The problem with sample libraries lies in the size of ensembles and time required to set them up for professional production.</description></item><item><title>An Elaborated Summary of the Technique of Gain-Staging - 1. What and Why</title><link>https://RCJacH.github.io/blog/gain-staging/</link><pubDate>Sun, 07 Apr 2019 19:51:01 +0800</pubDate><guid>https://RCJacH.github.io/blog/gain-staging/</guid><description>What is Gain-Staging Gain-staging is essentially the practice of managing all static volume settings with a fixed reference point. Static volume setting is decibels of gain added or subtracted to a signal at one place in the signal flow, which remains unchanged through out the time span of the project playback. The goal of gain-staging is to ensure that any pair of input and output signals enclosing a signal processor chain match in average volume.</description></item><item><title>REAPER - RCMShip Perfect Pitch</title><link>https://RCJacH.github.io/blog/reaper-jsfx-rcmship-perfect-pitch/</link><pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate><guid>https://RCJacH.github.io/blog/reaper-jsfx-rcmship-perfect-pitch/</guid><description>Download from here: RCMShip Perfect Pitch on Github
or Simply add my repository in ReaPack:
RCJacH ReaPack Repository
Description RCMShip (MShip stands for musicianship) Perfect Pitch is a little game for exercising Perfect Pitch, the ability to recognize notes without any reference, using adaptive method of randomization.
How to Play Click START, the synth will play a tone. Guess the name of the tone by clicking on one of the note names.</description></item><item><title>REAPER Signal Flow</title><link>https://RCJacH.github.io/blog/reaper-signal-flow/</link><pubDate>Fri, 23 Jun 2017 00:00:00 +0000</pubDate><guid>https://RCJacH.github.io/blog/reaper-signal-flow/</guid><description>What is signal flow?
For our interest in digital audio production, signal flow is how signal data, either audio or MIDI, travel through various stages of the DAW calculation.
Because of the potential complexity of our routing, from something as simple as building a send track to something more abstract such as designing modular synth or multi-track template with parameter modulations, to have a clear mental picture of the signal flow, it would be quite beneficial to know what stages and in what order our signals are going through within the DAW.</description></item><item><title>Tone Sweep - REAPER JSFX Percussion Synth</title><link>https://RCJacH.github.io/blog/reaper-jsfx-tone-sweep/</link><pubDate>Fri, 05 May 2017 00:00:00 +0000</pubDate><guid>https://RCJacH.github.io/blog/reaper-jsfx-tone-sweep/</guid><description>You can download it from here: Tone Sweep on Github
or Simply add my repository in ReaPack:
RCJacH ReaPack Repository
Description: This synth generates a monophonic sweeping tone when receiving a MIDI note input. Intended for designing percussive sounds, such as kicks, snares, toms, or sound FXs in electronic music genres.
Quick Instruction: Set a starting and ending note.
If necessary, change the Pitch Sweep Curve and length by dragging the Pitch Curve Graph, x axis for length, and y axis for curve.</description></item><item><title>REAPER Toolbar System</title><link>https://RCJacH.github.io/blog/reaper-toolbar-system/</link><pubDate>Thu, 22 Sep 2016 00:00:00 +0000</pubDate><guid>https://RCJacH.github.io/blog/reaper-toolbar-system/</guid><description>I recently discovered an interesting and efficient way of using Reaper&amp;rsquo;s customizable toolbars.
In other DAWs, the toolbars would remain stagnant throughout the sessions, and the only change you can apply to them would be either to move them or hide them.
In Reaper, since we are lucky enough to have many customizable toolbars available, while able to customize our toolbars with any action, it wouldn&amp;rsquo;t take long before our screen becomes like this</description></item><item><title>REAPER JS: MIDI Note Beat Repeater</title><link>https://RCJacH.github.io/blog/reaper-jsfx-midi-note-beat-repeater/</link><pubDate>Sun, 24 Jul 2016 00:00:00 +0000</pubDate><guid>https://RCJacH.github.io/blog/reaper-jsfx-midi-note-beat-repeater/</guid><description>Download MIDI Note Beat Repeater JSFX and put it somewhere within the Effects folder of your Reaper Resources Path.
Update: Description: This script is made to emulate the note repeating function in Native Instrument Maschine hardware.
I have never used Maschine myself, thus I do not know how it really works.
However, I did watch some video that demonstrated great workflow for inputting hihat patterns.
How to use: You can use this script in two ways:</description></item><item><title>REAPER Track Template - Layout RSGC</title><link>https://RCJacH.github.io/blog/reaper-track-template-layout-rsgc/</link><pubDate>Thu, 16 Jun 2016 00:00:00 +0000</pubDate><guid>https://RCJacH.github.io/blog/reaper-track-template-layout-rsgc/</guid><description>Here&amp;rsquo;s a Reaper Track Template that I believe would improve your production workflow. It&amp;rsquo;s called &amp;ldquo;Layout RSGC&amp;rdquo;, which stands for Reference, Sections, Grooves, and Chords, a group of four tracks. These four tracks are used to construct a general layout for our song production, which is vital for commercial projects that is tight on schedule, with no time for any experimentation or trying out new ideas. It is way easier to insert the track template and copy n' pasting existing items rather than handwriting everything from scratch, which we may have been doing in the past.</description></item><item><title>Vocal Recording &amp; Mixing Template by RCJacH</title><link>https://RCJacH.github.io/blog/vocal-recording-n-mixing-template-by-rcjach/</link><pubDate>Sat, 16 Apr 2016 00:00:00 +0000</pubDate><guid>https://RCJacH.github.io/blog/vocal-recording-n-mixing-template-by-rcjach/</guid><description>Vocal Recording &amp;amp; Mixing Template
By RCJacH
Explanation Vocal Recording &amp;amp; Mixing Template by RCJacH is a REAPER template for recording and rough mixing lead vocal and vocal harmonies against an instrumental track, including native functional FXs (with a few JS effects) on each track with track controls directly visible on the mixer.
This template works the best with the default REAPER themes. All dynamic related FXs are designed to work around signals that are recorded with RMS level of -20dBFS.</description></item><item><title>How to Use Track Manager in REAPER</title><link>https://RCJacH.github.io/blog/how-to-use-track-manager-in-reaper/</link><pubDate>Thu, 03 Mar 2016 00:00:00 +0000</pubDate><guid>https://RCJacH.github.io/blog/how-to-use-track-manager-in-reaper/</guid><description>When we are dealing with MIDI drumset, guitar, and other sample libraries that requires either multiple output or routing, the default setup may show up like this:
See the lines of space below the topmost track? That&amp;rsquo;s all the microphone outputs of a drum library. They display no audio information other than level meters, but taking up a huge chunk of space in the arranger view, especially when zoomed in. It will fire up your frustration during your working sessions, taking up scrolling time which you could have saved for music making, so we are better off throwing them out of our sight.</description></item><item><title>Recording Volume Calibration</title><link>https://RCJacH.github.io/blog/recording-volume-calibration/</link><pubDate>Sat, 06 Feb 2016 00:00:00 +0000</pubDate><guid>https://RCJacH.github.io/blog/recording-volume-calibration/</guid><description>I have seen many people, from amateurs to professionals (in China), myself included, struggling with digital volume level calibration while tracking. Many people do not bother having a standard with levels and many lack the understanding of impact of leveling in tracking, resulting in level inconsistency between tracks or even takes. It took me quite a while to come across articles explaining at what level we should be recording at and why, and thus helped me greatly by providing recordings at consistent level while removing any doubts of &amp;ldquo;am I recording too hot or too quiet?</description></item></channel></rss>