<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>music production on RCJacH</title><link>https://RCJacH.github.io/tags/music-production/</link><description>Recent content in music production on RCJacH</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 03 Jul 2021 03:13:14 +0800</lastBuildDate><atom:link href="https://RCJacH.github.io/tags/music-production/index.xml" rel="self" type="application/rss+xml"/><item><title>Airwindows Console Plugins Basics</title><link>https://RCJacH.github.io/blog/aw-console-basics/</link><pubDate>Sat, 03 Jul 2021 03:13:14 +0800</pubDate><guid>https://RCJacH.github.io/blog/aw-console-basics/</guid><description>I did a comparison of Airwindows console plugins in the last post, today I&amp;rsquo;m going to talk about how to use them.
Before getting into the actual setup, let me first explain what they are and what they do.
The Purpose of Airwindows Console Plugins Airwindows Console series aim to emulate the summing effect of analog console systems.
Summing is what happens when two signals are combined. With digital signal, summing is simple addition.</description></item><item><title>Airwindows Console Plugins Comparison</title><link>https://RCJacH.github.io/blog/aw-console-comparison/</link><pubDate>Thu, 01 Jul 2021 10:32:38 +0800</pubDate><guid>https://RCJacH.github.io/blog/aw-console-comparison/</guid><description>I&amp;rsquo;ve been using Airwindows Console series since it came out as free plugins. They definitely add some gluing characters to the digital signal. Some people even go as far as saying that these sound better than &amp;ldquo;a well-known, transformer-based, Class A analog summing mixer&amp;rdquo;.
Recent I figured out a more fitting way to use the console system in REAPER, and started to incorporate more of them in my template files.</description></item><item><title>An Elaborated Summary of the Technique of Gain-Staging - 1. What and Why</title><link>https://RCJacH.github.io/blog/gain-staging/</link><pubDate>Sun, 07 Apr 2019 19:51:01 +0800</pubDate><guid>https://RCJacH.github.io/blog/gain-staging/</guid><description>What is Gain-Staging Gain-staging is essentially the practice of managing all static volume settings with a fixed reference point. Static volume setting is decibels of gain added or subtracted to a signal at one place in the signal flow, which remains unchanged through out the time span of the project playback. The goal of gain-staging is to ensure that any pair of input and output signals enclosing a signal processor chain match in average volume.</description></item><item><title>REAPER Signal Flow</title><link>https://RCJacH.github.io/blog/signal-flow/</link><pubDate>Fri, 23 Jun 2017 00:00:00 +0000</pubDate><guid>https://RCJacH.github.io/blog/signal-flow/</guid><description>What is signal flow?
For our interest in digital audio production, signal flow is how signal data, either audio or MIDI, travel through various stages of the DAW calculation.
Because of the potential complexity of our routing, from something as simple as building a send track to something more abstract such as designing modular synth or multi-track template with parameter modulations, to have a clear mental picture of the signal flow, it would be quite beneficial to know what stages and in what order our signals are going through within the DAW.</description></item><item><title>REAPER Toolbar System</title><link>https://RCJacH.github.io/blog/toolbar-system/</link><pubDate>Thu, 22 Sep 2016 00:00:00 +0000</pubDate><guid>https://RCJacH.github.io/blog/toolbar-system/</guid><description>I recently discovered an interesting and efficient way of using Reaper&amp;rsquo;s customizable toolbars.
In other DAWs, the toolbars would remain stagnant throughout the sessions, and the only change you can apply to them would be either to move them or hide them.
In Reaper, since we are lucky enough to have many customizable toolbars available, while able to customize our toolbars with any action, it wouldn&amp;rsquo;t take long before our screen becomes like this</description></item><item><title>REAPER JS: MIDI Note Beat Repeater</title><link>https://RCJacH.github.io/blog/midi-note-beat-repeater/</link><pubDate>Sun, 24 Jul 2016 00:00:00 +0000</pubDate><guid>https://RCJacH.github.io/blog/midi-note-beat-repeater/</guid><description>Download MIDI Note Beat Repeater JSFX and put it somewhere within the Effects folder of your Reaper Resources Path.
Update: * v1.1 (2016-10-09)
+ Renamed
+ Added Gate Function (Note Length)
+ Added Sync to grid function
# Fixed Note On accuracy
Description: This script is made to emulate the note repeating function in Native Instrument Maschine hardware.
I have never used Maschine myself, thus I do not know how it really works.</description></item><item><title>Fundamental Guitar Voicings for Pian(o roll)ists</title><link>https://RCJacH.github.io/blog/fundamental-guitar-voicing-for-piano-rollists/</link><pubDate>Tue, 05 Jul 2016 00:00:00 +0000</pubDate><guid>https://RCJacH.github.io/blog/fundamental-guitar-voicing-for-piano-rollists/</guid><description>For guitarist, from beginners to advanced players, there is a chord system called CAGED system, where you take the form of C, A, G, E, D barre chords and move them across the fretboard over different roots.
(img from http://www.cagedguitarsystem.net/)
So you only need to learn at most 5 basic chord shapes to start playing chord progressions on the guitar. However, for pianists, this concept might be a bit difficult to understand without basic guitar knowledge, and learning the guitar for a short time isn&amp;rsquo;t always the most efficient and effective method of approach to arranging for chordal playing on guitar.</description></item><item><title>REAPER Track Template - Layout RSGC</title><link>https://RCJacH.github.io/blog/track-template-layout-rsgc/</link><pubDate>Thu, 16 Jun 2016 00:00:00 +0000</pubDate><guid>https://RCJacH.github.io/blog/track-template-layout-rsgc/</guid><description>Here&amp;rsquo;s a Reaper Track Template that I believe would improve your production workflow. It&amp;rsquo;s called &amp;ldquo;Layout RSGC&amp;rdquo;, which stands for Reference, Sections, Grooves, and Chords, a group of four tracks. These four tracks are used to construct a general layout for our song production, which is vital for commercial projects that is tight on schedule, with no time for any experimentation or trying out new ideas. It is way easier to insert the track template and copy n' pasting existing items rather than handwriting everything from scratch, which we may have been doing in the past.</description></item><item><title>How to Use Track Manager in REAPER</title><link>https://RCJacH.github.io/blog/how-to-use-track-manager/</link><pubDate>Thu, 03 Mar 2016 00:00:00 +0000</pubDate><guid>https://RCJacH.github.io/blog/how-to-use-track-manager/</guid><description>When we are dealing with MIDI drumset, guitar, and other sample libraries that requires either multiple output or routing, the default setup may show up like this:
See the lines of space below the topmost track? That&amp;rsquo;s all the microphone outputs of a drum library. They display no audio information other than level meters, but taking up a huge chunk of space in the arranger view, especially when zoomed in. It will fire up your frustration during your working sessions, taking up scrolling time which you could have saved for music making, so we are better off throwing them out of our sight.</description></item></channel></rss>