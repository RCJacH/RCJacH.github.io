<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>音乐修养 on RCJacH</title>
    <link>https://RCJacH.github.io/cn/tags/%E9%9F%B3%E4%B9%90%E4%BF%AE%E5%85%BB/</link>
    <description>Recent content in 音乐修养 on RCJacH</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    <copyright>所有版权归RCJacH拥有。</copyright>
    <lastBuildDate>Sun, 01 Jul 2018 21:23:14 +0800</lastBuildDate>
    
	<atom:link href="https://RCJacH.github.io/cn/tags/%E9%9F%B3%E4%B9%90%E4%BF%AE%E5%85%BB/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>乐理系列教程 - 大调音阶</title>
      <link>https://RCJacH.github.io/cn/blog/rcmtheory/the-major-scale/</link>
      <pubDate>Sun, 01 Jul 2018 21:23:14 +0800</pubDate>
      
      <guid>https://RCJacH.github.io/cn/blog/rcmtheory/the-major-scale/</guid>
      <description>定义 大调音阶是一组由七个不同音高组成的合集，这些音相互之间保持着固定的距离。
属性  大调音阶拥有七个不同音高组的音级，按照音高从低到高排序。 每一个音级有一个专属名称。 其中有两双距离为半音的音级，分别是3级与4级，7级与1级。其他临近音级之间距离为全音。  学习指南  大调音阶每个音高组仅出现一次，例C与C#不可同时出现，要么C与Db要么B#与C#。 关于音级的专属名称，暂时我们仅需要知道音阶的第一个音叫主音，例如Bb大调音阶的主音为Bb。其他音可以用音级数来表示，例如二级音、三级音。 为了写出大调音阶，我们先写下从主音开始的7个音高组，以Bb为例则为B C D E F G A。 然后观察每双相邻音级的关系并确认*仅三级至四级和七级至主音为半音关系*，其他相邻音级为全音关系。 若任何相邻音关系不符合以上结构，用变音记号去修正后者。一个常见规律为，若音阶主音为F或包含降号，则使用降号来修正音高关系，否则使用升号。  例子 以E大调音阶为例子。
我们列出从E开始的所有音高组：E F G A B C D，并确认仅三级至四级和七级至主音为半音关系，其他临近音级之间距离为全音。
从主音开始，我们发现E-F是个半音关系，但是我们在看1-2音级而非3-4音级，这里我们需要个全音，所以需要改变后者。为了让半音关系提升到全音关系，我们需要把F升上去，得到F#。所以F#是这个音阶的二级。
接下来我们观察一下F#与G - 二级音与三级音。我们知道F至G是个全音（中间包含一个音的距离），而因为他们不是E至F或者B至C，所以F#（F之上的一个音）到G是个半音。这不符合大调音阶的规律，我们需要把G升上去并得到G#，所以G#是E大调音阶的三级。
对比这个G#和下一个A音高组，也就是改音阶的第三个和第四个音。这两个音需要是半音关系，我们看看是否如此。G音高组到A音高组不属于E-F或B-C这两个半音组，所以他们之间是个全音关系，而由于我们刚才刚把G升至G#，所以G#至A是个半音关系。这符合大调音阶中三级与四级之间需为半音关系的规律，所以A是E大调音阶的四级音。
由此，我们可以用同样的逻辑来推导出E大调剩下的音高。
让我们看看另一个例子，Ab大调音阶。
首先列出从A开始的所有音高组：A B C D E F G。然后观察每双相邻音高。
从一级开始，A至B。因为他们*不是E至F或B至C，所以应该是全音*。但是，由于音阶的主音是Ab，比A还要低一个音，也就是说Ab与B之间的关系为*一个全音加上一个半音*，所以我们需要调整后者。为了让他们之间保持全音的关系，我们需要降低B的音高至Bb，所以Bb才是Ab大调音阶的二级。
从Bb往后看，下一个音高组是C。我们知道*B至C是个半音*，而我们在看音阶的二级与三级，需要个全音关系。但别忘了，我们刚才已经把B降至Bb，把他们之间的半音关系扩展至全音关系了，这符合大调音阶的规律。所以C正是Ab大调音阶的三级。
下一个音高组为D。大调音阶的*三级和四级之间需为半音关系*，而C至D是个全音，所以我们需要把D降至Db来获取音阶四级音。
接下来我们只需要回顾一下之前的操作，并应用在剩下的音级上就好了。例，Db至E的关系与第一组Ab至B的关系相同。
细说 大调音阶是西方乐理中关于音高关系的方面最重要的一个概念，因为所有其他的主题，无论是音程、和弦构造、还是功能和声，都是基于大调音阶的，所以内化所有的大调音阶很重要。
这篇文章提供了一个可以用逻辑推导大调音阶的方法，就像我们学的数学公式一样。我们需要先从结果中推导出公式，然后记住该公式才能更快地运用起来。记忆来自于理解、训练、和应用，不过不要担心，我们之后的课程中会有足够多的机会去使用此概念的。
很多乐理书上会在*音名*之后马上教*音程*（两个音之间的相关关系），可能因为音程涉及到的音会少一点。但是，若没有大调音阶的知识储备，学习音程可能只能依赖于数音数了。除此之外，很多书籍在讲音阶的时候会用五度圈或者调号来解释。虽然这两个概念很重要，很多人在学习过程中只会更迷茫，因为他们记不住五度圈看起来随机的顺序。为了学习大调音阶而学五度圈，为了学五度圈而学音程，而学音程有需要了解大调音阶&amp;hellip;这有点绕圈了。
所以我认为我们需要先学会建立大调音阶，并且把需要死记硬背的内容减到最少。本文其实只列出了三个重点和三个简单地推导步骤，纯逻辑，不需要记什么绕口令。
复习 该你啦！用本文所教的方法，以所有音高为主音推导对应的大调音阶 - 其中包含那些有等音关系的音高。注意*一些大调音阶会需要使用重升号和重降号*。</description>
    </item>
    
    <item>
      <title>乐理系列教程 - 音名</title>
      <link>https://RCJacH.github.io/cn/blog/rcmtheory/pitch-name/</link>
      <pubDate>Tue, 05 Jun 2018 18:37:19 +0800</pubDate>
      
      <guid>https://RCJacH.github.io/cn/blog/rcmtheory/pitch-name/</guid>
      <description>音高定义 音高是人类对声音频率在对数刻度上的感受，也是用来判断声音高低的属性之一。
命名规则  共有七组重复的音高，我们称之为音高组，并用字母A B C D E F G标注。 在这些音高组之间，有另外五个没有直接用字母标注的音高。所以每次重复之间共有十二个不同的音高。 这些字母之间，只有E-F与B-C是相邻的（此关系名为半音），其他字母之间皆有一个音高（此关系名为全音）。 为了使用这些中间音，我们使用一种叫变音记号的名称修饰符，来改变音组字母所代表的音高。变音记号共有四种，可叠加使用，分别为：   降号 (b) = -1： 1
 升号 (#) = +1： 1
 重升号 (x) = +2： 1
 还原记号 = 0（去除其他变音记号的影响）： 1仅在五线谱中出现。
  
5. 正因为这些修饰符的存在，每一个音高可以有多个音名。同一个音高的不同名称被称为等音。
学习指南 命名规则  因历史原因，在音乐中这些字母的排列通常为C D E F G A B。 为了建立稳固的基础概念，我们在此仅使用十二平均律作为音律标准，即任意两个临近音之间的距离在对数刻度上是相等的。 学习这个规律最好的方法就是想象钢琴键盘。 区分*音高组*与*修饰符*对于理解音高相关的主题极其重要 - 无论是音程、音阶还是之后的对位法、和声学 - 理解之后能很快掌握之后的知识点。对于音高，其中一个思路是*把所有12个不同的音高根据他们之间的关系定义为0-11的数字，其中C = 0，D = 2等。*去获取数字为1的音高，也就是C与D之间的音高，我们可以从0加上1（升号），或者从2减去1（降号）。这样，我们只需要去记很少的信息，同时当碰到三重升号 或三重降号的时候 也不会一脸茫然。 等音不等于同一个音高。他是否为同一个音高取决于乐器的音律，例如木管和铜管通常是以谐音列为基础的音律，而非十二平均律。举个例子，重降D，代表从D音高组为基础-2的音高，其等音为C。但重降D依然属于D音高组的变异，而C则是C音高组的组员。  频率与音高 作为参考，一个音高的频率每次重复都会增加一倍。例如，若A音高的频率为440Hz，当我们经过BCDEFG以及期间的5个额外音高后，下一个A的音高则是两倍的频率：880Hz。再下一个A则为1760Hz。同时因为共有12个不同的音高，每增加半音，我们用基础赫兹乘以2的12次方根。 上图中，当音高上升时，半音之间的距离也在增加。为了让任意频段的相邻音之间保持同样距离，我们需要使用对数刻度。 细说 虽然音名属于乐理中最基础的概念，*它是那些能主动设计音乐的人与那些只能被动复现音乐的人最大的区别。*有很多乐理基础书籍、文章、甚至插件都很注重十二平均律里的十二个音，这个虽然对和声染色或序列音乐很有帮助，但并没有讲清楚功能音乐中每个音符之间的关系。有一些人甚至鼓励死记硬背，完全没有意识到我们对知识的深刻记忆来自于理解与经验，熟练只是这些努力的显性结果。</description>
    </item>
    
    <item>
      <title>乐理系列教程 - 前言及目录</title>
      <link>https://RCJacH.github.io/cn/blog/rcmtheory/toc/</link>
      <pubDate>Sat, 26 May 2018 01:53:16 +0800</pubDate>
      
      <guid>https://RCJacH.github.io/cn/blog/rcmtheory/toc/</guid>
      <description> 前言 这篇为了宣布我将发布一系列乐理教程，包含乐理基础、和声学、对位法、及其它我目前还没想好的主题。这一页将作为系列的前言及目录，每出一篇新文章后会及时更新链接。
作为前言，应该写一些东西哈，但我写完英文版后发现一些梗不好直译，所以只能照着轮廓重写一遍了。此篇大概讲一下为什么在当今乐理书与文章已经层出不穷的环境下，我还要坚持写此类教学文章。
我观察到的是，虽然市场上有一些优秀的学习资料，大部分乐理教学系列都挺尴尬的。他们通常会遇到以下两个问题之一。
第一个问题出现在各类实体或网络书籍中。其问题核心是：书写出来通常是用来发行出售的！无论是卖给刚被家长拉着去考级的孩子们还是为了乐理课被迫买教材的音乐本科生们，作者都需要考虑目标读者群体是否愿意花钱去买。这决定了书籍内容的内容及表达方式。例如，读者在某些程度上会以页数来评判一本书的定价，三百页的书应该比三十页的更值钱之类的。为了让自己的作品卖更多钱，多数作者愿意花更多时间码字儿，把简单的感念复杂化，把一个主题拆开了塞各种练习题之类的。这样一些读者会认为：“他说的我都看不懂，应该是本好书！” 看这种书的确也能学到东西，但一个月能学下来的内容要花一两年（而且可能学得越辛苦越觉得作者水平高还觉得自己笨）。何苦呢。
第二个问题存在于网络上的各种乐理类文章。网络年代的优势是我们可以主动去寻找学习的主题、快速理解该题材的基础、并能理智地去选择是否要去深入研究。一个优秀的案例如维基百科，只不过对于音乐理论来讲，它的内容更多是关于某个话题的知识，而非针对其能力的训练。蓝色的什么百科就不用提了，好多内容都是错的、有误导性的、甚至内嵌广告。wiki以外跟乐理相关的网络文章、博客，大部分分为两类：深入探索某知识点或拉流量的白水文。前者是非常优秀的学习资源，不过更针对于有一定基础的读者群众；后者通常只是把常见书上的内容概括了一下，目的是让读者在不需要理解的情况下能够顺利复制文章内容。这些文章作为消磨时间而用可能还有一些效果，但若真心想解锁某些技能可能就不太合适了。
P.S. 国内当代还有一类：围绕话题抖段子。看之前很空虚，看完更空虚。当你觉得看完这些言不及义的文章后学不到什么内容时，人家还会反驳反正当代中国人都不想学习只想娱乐。wtf
我认为学习任何概念应该从非常明确的定义开始，然后再引入例子及解释。所以我开始写这个系列，重点为学习、理解、应用，把那些正史野史的故事、抖机灵的段子、或其他一些不可言喻的思想留给其他材料去讲。
我在此真心希望这系列的读者能够享受迅速学习、理解的过程。

目录  前言
 音乐基础
2.1. 音名
2.2. 大调音阶
2.3. 音程
 和声
 对位法  </description>
    </item>
    
    <item>
      <title>REAPER - 原创JSFX小游戏RCMShip Perfect Pitch</title>
      <link>https://RCJacH.github.io/cn/blog/reaper-jsfx-rcmship-perfect-pitch/</link>
      <pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://RCJacH.github.io/cn/blog/reaper-jsfx-rcmship-perfect-pitch/</guid>
      <description>RCMShip Perfect Pitch下载地址
RCJacH的ReaPack Repository包含REAPER Daw使用的Lua和JS脚本与效果器RCJacH ReaPack Repository
如何使用ReaPack？
简介 RCMShip （MShip代表musicianship，即音乐修养、视唱练耳）Perfect Pitch是一款包含自适应随机算法的原创JSFX游戏，用来练习绝对音感的能力。
游戏方式  点击 START后，游戏将播放一个固定音高。 猜测该音高的音名并点击相关按钮。 回答后，游戏将将显示正确答案，若答错也会显示所选答案。 点击 Next 将继续下一轮。  特色 自适应 当玩家做出回答后，回答的正确与否将影响当前所播放的音出现的几率。
可选性 点击Setup将转至音符选择页面，在此你可以手动或随机选择游戏所包含的音高，限制游戏难度或者增加变化。
可配置 点击Config按钮切换到设置页面，可以设置一些基本参数，例如音量、音符长度、播放的八度和八度跨越等。也可以切换至MIDI输出模式，用采样播放器或者其他合成器作为音源。
进阶介绍 理论 来自404（wiki）：&amp;rdquo;Absolute pitch (AP), widely referred to as perfect pitch, is a rare auditory phenomenon characterized by the ability of a person to identify or re-create a given musical note without the benefit of a reference tone.&amp;rdquo; 绝对音感是一个罕见的听觉现象，指的是一个人有能力在没有参考音高的情况下识别或重现一个给定的音符音高。</description>
    </item>
    
  </channel>
</rss>